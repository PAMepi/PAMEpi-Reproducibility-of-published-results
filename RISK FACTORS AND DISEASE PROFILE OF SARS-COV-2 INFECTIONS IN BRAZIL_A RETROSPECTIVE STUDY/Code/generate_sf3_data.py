#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Generates the data needed for Supplementary Figure 3.
The figure is generated by the routine fig_2d_age_bdi.py
"""

import pandas as pd
import numpy as np
import datetime
import matplotlib.pyplot as plt
from scipy.stats import median_test


ref = datetime.date(2019, 12, 31)
max_dur = 90
data0 = pd.read_csv('../Data/SRAG_filtered_morb.csv')
data0 = data0[(~pd.isna(data0.NU_IDADE_N))&(~pd.isna(data0.ibp))]

saida_H = {'mean_all':[], 'stdm_all':[], 'median_all':[], \
           'mean_death':[], 'stdm_death':[], 'median_death':[], 'mean_cure':[],\
           'stdm_cure':[], 'median_cure':[], 'n_death':[], 'n_cure':[],\
           'age_min':[], 'age_mean':[], 'age_max':[], \
           'ibp_min':[], 'ibp_mean':[], 'ibp_max':[]}
saida_U = {'mean_all':[], 'stdm_all':[], 'median_all':[], \
           'mean_death':[], 'stdm_death':[], 'median_death':[], 'mean_cure':[],\
           'stdm_cure':[], 'median_cure':[], 'n_death':[], 'n_cure':[],\
           'age_min':[], 'age_mean':[], 'age_max':[],
           'ibp_min':[], 'ibp_mean':[], 'ibp_max':[]}

data0 = data0[~(data0.UTI_dur<0)]
data0 = data0[~(data0.HOSP_dur<0)]
data0 = data0[~((data0.UTI_dur>max_dur)|(data0.HOSP_dur>max_dur))]

ages = [0, 18, 30, 40, 50, 65, 75, 85, np.inf]
nsep = len(ages) - 1

nsep2 = 10
ibps = np.linspace(data0.ibp.min(), data0.ibp.max(), nsep2+1)


#%%
for j in range(nsep2):
    for i in range(nsep):
        print(i,j)
        if i == nsep-1:
            data = data0[(data0.NU_IDADE_N>=ages[i])]
        else:
            data = data0[(data0.NU_IDADE_N>=ages[i])&(data0.NU_IDADE_N<ages[i+1])]
        if j == nsep2-1:
            data = data[data.ibp>=ibps[j]]
        else:
            data = data[(data.ibp>=ibps[j])&(data.ibp<ibps[j+1])]
        agem = data.NU_IDADE_N.mean()
        agei = [data.NU_IDADE_N.min(), data.NU_IDADE_N.max()]
        saida_H['age_mean'].append(agem)
        saida_U['age_mean'].append(agem)
        saida_H['age_max'].append(agei[1])
        saida_U['age_max'].append(agei[1])
        saida_H['age_min'].append(agei[0])
        saida_U['age_min'].append(agei[0])
        ibpm = data.ibp.mean()
        ibpi = [data.ibp.min(), data.ibp.max()]
        saida_H['ibp_mean'].append(ibpm)
        saida_U['ibp_mean'].append(ibpm)
        saida_H['ibp_max'].append(ibpi[1])
        saida_U['ibp_max'].append(ibpi[1])
        saida_H['ibp_min'].append(ibpi[0])
        saida_U['ibp_min'].append(ibpi[0])
        
        hU, b_edg = np.histogram(data.UTI_dur, bins=np.arange(0, max_dur+1))
        hH, b_edg = np.histogram(data.HOSP_dur[pd.isna(data.UTI_dur)], \
                                bins=np.arange(0, max_dur+1))
        
        dICU = np.sum((~pd.isna(data.DT_ENTUTI))&(data.EVOLUCAO==2))
        cICU = np.sum((~pd.isna(data.DT_ENTUTI))&(data.EVOLUCAO==1))
        dH = np.sum((pd.isna(data.DT_ENTUTI))&(data.EVOLUCAO==2))
        cH = np.sum((pd.isna(data.DT_ENTUTI))&(data.EVOLUCAO==1))
        saida_H['n_death'].append(dH)
        saida_U['n_death'].append(dICU)
        saida_H['n_cure'].append(cH)
        saida_U['n_cure'].append(cICU)
        
        U = data.UTI_dur[~pd.isna(data.UTI_dur)]
        tU = U.mean()
        stU = U.std(ddof=1) / np.sqrt(len(U))
        saida_U['mean_all'].append(tU)
        saida_U['stdm_all'].append(stU)
        saida_U['median_all'].append(U.median())
        
        U_d = data.UTI_dur[(~pd.isna(data.UTI_dur))&(data.EVOLUCAO==2)]
        tU_d = U_d.mean()
        stU_d = U_d.std(ddof=1) / np.sqrt(len(U_d))
        saida_U['mean_death'].append(tU_d)
        saida_U['stdm_death'].append(stU_d)
        saida_U['median_death'].append(U_d.median())
        
        U_c = data.UTI_dur[(~pd.isna(data.UTI_dur))&(data.EVOLUCAO==1)]
        tU_c = U_c.mean()
        stU_c = U_c.std(ddof=1) / np.sqrt(len(U_c))
        saida_U['mean_cure'].append(tU_c)
        saida_U['stdm_cure'].append(stU_c)
        saida_U['median_cure'].append(U_c.median())
        
        
        H = data.HOSP_dur[pd.isna(data.UTI_dur)]
        tH = H.mean()
        stH = H.std(ddof=1) / np.sqrt(len(H))
        saida_H['mean_all'].append(tH)
        saida_H['stdm_all'].append(stH)
        saida_H['median_all'].append(H.median())
        
        
        H_d = data.HOSP_dur[(pd.isna(data.UTI_dur))&(data.EVOLUCAO==2)]
        tH_d = H_d.mean()
        stH_d = H_d.std(ddof=1) / np.sqrt(len(H_d))
        saida_H['mean_death'].append(tH_d)
        saida_H['stdm_death'].append(stH_d)
        saida_H['median_death'].append(H_d.median())
       
        
        H_c = data.HOSP_dur[(pd.isna(data.UTI_dur))&(data.EVOLUCAO==1)]
        tH_c = H_c.mean()
        stH_c = H_c.std(ddof=1) / np.sqrt(len(H_c))
        saida_H['mean_cure'].append(tH_c)
        saida_H['stdm_cure'].append(stH_c)
        saida_H['median_cure'].append(H_c.median())
    

sah = pd.DataFrame(saida_H)
sah.to_csv('../Results/mean_h.csv', index=False)
sah = pd.DataFrame(saida_U)
sah.to_csv('../Results/mean_u.csv', index=False)